#!/bin/sh

main() {
    compile
    if [ $((CLIENT)) -eq 1 ]
    then
        clients_main
    else
        servers_main
    fi
}

compile() {
    if [ $((COMPILE)) -eq 1 ]
    then
       ./compile
    fi
}

servers_main() {
    if  [ $((LOCAL)) -eq 1 ]
    then
        servers_local_main
    else
        servers_cop_main
    fi
}

servers_local_main() {
    ./generate_conf_local
    echo "Starting servers..."
    for ID in $(seq 0 $(($NUM_REPLICAS - 1))); do
        start_replica "$ID" &
        sleep 0.5
    done

    wait $!
}

servers_cop_main() {
    ./generate_conf_cop
    start_replica "$ID"
}

clients_main() {
    if [ "$LOCAL" -eq 1 ]
    then
        ./generate_conf_local
    else
        ./generate_conf_cop
    fi

    start_clients
}

start_replica() {
    exec "$JAVA_HOME"/bin/java -xmX60G -Dlogback.configurationFile=config/logback.xml -jar build/libs/bft-smart-all.jar server \
        "$1" "$MEASUREMENT_INTERVAL" "$REPLY_SIZE" "$STATE_SIZE" "$VERBOSE" nosig "$PATH_TO_OS_STATS" ''
}

start_clients() {
    exec "$JAVA_HOME"/bin/java -xmX60G -Dlogback.configurationFile=config/logback.xml -jar build/libs/bft-smart-all.jar client \
        1000 "$NUM_CLIENTS" "$OPS_NUMBER" "$REQUEST_SIZE" "$REQUEST_SLEEP_MILLIS" "$CONCURRENT_RQS" \
        false "$VERBOSE" nosig "$PATH_TO_OS_STATS"
}

main
